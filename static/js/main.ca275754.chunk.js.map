{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","isTitleValid","isImgUrlValid","isImdbUrlValid","isImdbIdValid","handleChange","event","target","name","value","inputName","getValidInput","setState","handleSumbit","preventDefault","formValidation","newMovie","createMovie","props","addMovie","clearState","toUpperCase","slice","this","type","placeholder","onChange","onClick","Component","App","moviesFromServer","prevState","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca275754.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { Component } from 'react';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  isTitleValid: boolean;\n  isImgUrlValid: boolean;\n  isImdbUrlValid: boolean;\n  isImdbIdValid: boolean;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isTitleValid: false,\n    isImgUrlValid: false,\n    isImdbUrlValid: false,\n    isImdbIdValid: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n    const inputName = this.getValidInput(name);\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n      [inputName]: false,\n    }));\n  };\n\n  handleSumbit = (event: React.FormEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (this.formValidation()) {\n      const newMovie = this.createMovie();\n\n      this.props.addMovie(newMovie);\n      this.clearState();\n    }\n  };\n\n  getValidInput = (name: string) => {\n    const inputName = name[0].toUpperCase() + name.slice(1);\n\n    return `is${inputName}Valid`;\n  };\n\n  createMovie = () => ({\n    title: this.state.title,\n    description: this.state.description,\n    imgUrl: this.state.imdbUrl,\n    imdbUrl: this.state.imdbUrl,\n    imdbId: this.state.imdbId,\n  });\n\n  formValidation = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      this.setState({\n        isTitleValid: !title,\n        isImgUrlValid: !imgUrl,\n        isImdbUrlValid: !imdbUrl,\n        isImdbIdValid: !imdbId,\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isTitleValid: false,\n      isImgUrlValid: false,\n      isImdbUrlValid: false,\n      isImdbIdValid: false,\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isTitleValid,\n      isImgUrlValid,\n      isImdbUrlValid,\n      isImdbIdValid,\n    } = this.state;\n\n    return (\n      <form>\n        <div className=\"field\">\n          <label className=\"label\">Title</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Text input\"\n              value={title}\n              onChange={this.handleChange}\n            />\n          </div>\n          {isTitleValid && (\n            <p className=\"help is-danger\">Please fill in the field</p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Description</label>\n          <div className=\"control\">\n            <textarea\n              className=\"textarea\"\n              name=\"description\"\n              placeholder=\"Textarea\"\n              value={description}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">imgUrl</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"imgUrl\"\n              placeholder=\"Text input\"\n              value={imgUrl}\n              onChange={this.handleChange}\n            />\n          </div>\n          {isImgUrlValid && (\n            <p className=\"help is-danger\">Please fill in the field</p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">imdbUrl</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"imdbUrl\"\n              placeholder=\"Text input\"\n              value={imdbUrl}\n              onChange={this.handleChange}\n            />\n          </div>\n          {isImdbUrlValid && (\n            <p className=\"help is-danger\">Please fill in the field</p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">imdbId</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"imdbId\"\n              placeholder=\"Text input\"\n              value={imdbId}\n              onChange={this.handleChange}\n            />\n          </div>\n          {isImdbIdValid && (\n            <p className=\"help is-danger\">Please fill in the field</p>\n          )}\n        </div>\n\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-link\"\n            onClick={this.handleSumbit}\n          >\n            Add movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}